///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Ragnarok
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The RamClear recording.
    /// </summary>
    [TestModule("809a1d27-89f6-4995-b5a2-ebfa9b0eee71", ModuleType.Recording, 1)]
    public partial class RamClear : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ObjectRepository repository.
        /// </summary>
        public static ObjectRepository repo = ObjectRepository.Instance;

        static RamClear instance = new RamClear();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public RamClear()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static RamClear Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Vertex.VertexShellMainForm.Database' at Center.", repo.Vertex.VertexShellMainForm.DatabaseInfo, new RecordItemIndex(0));
            repo.Vertex.VertexShellMainForm.Database.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Vertex.DatabaseManagement.Database_BtxActions' at Center.", repo.Vertex.DatabaseManagement.Database_BtxActionsInfo, new RecordItemIndex(1));
            repo.Vertex.DatabaseManagement.Database_BtxActions.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Vertex.DatabaseManagement.ChkClearPlugins' at Center.", repo.Vertex.DatabaseManagement.ChkClearPluginsInfo, new RecordItemIndex(2));
            repo.Vertex.DatabaseManagement.ChkClearPlugins.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Vertex.DatabaseManagement.ButtonRAMClear' at Center.", repo.Vertex.DatabaseManagement.ButtonRAMClearInfo, new RecordItemIndex(3));
            repo.Vertex.DatabaseManagement.ButtonRAMClear.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FactoryReset.ButtonYes' at Center.", repo.FactoryReset.ButtonYesInfo, new RecordItemIndex(4));
            repo.FactoryReset.ButtonYes.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to not exist. Associated repository item: 'Vertex.ProgressDialog'", repo.Vertex.ProgressDialog.SelfInfo, new ActionTimeout(60000), new RecordItemIndex(5));
            repo.Vertex.ProgressDialog.SelfInfo.WaitForNotExists(60000);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 50s for the attribute 'Enabled' to equal the specified value 'True'. Associated repository item: 'Vertex.DatabaseManagement.ButtonApply'", repo.Vertex.DatabaseManagement.ButtonApplyInfo, new RecordItemIndex(6));
            repo.Vertex.DatabaseManagement.ButtonApplyInfo.WaitForAttributeEqual(50000, "Enabled", "True");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Vertex.DatabaseManagement.ButtonApply' at Center.", repo.Vertex.DatabaseManagement.ButtonApplyInfo, new RecordItemIndex(7));
            repo.Vertex.DatabaseManagement.ButtonApply.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
