///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Ragnarok
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddCasinos recording.
    /// </summary>
    [TestModule("f7701c64-e6bf-4b2c-ba0c-8a8a8c2d68f7", ModuleType.Recording, 1)]
    public partial class AddCasinos : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ObjectRepository repository.
        /// </summary>
        public static ObjectRepository repo = ObjectRepository.Instance;

        static AddCasinos instance = new AddCasinos();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddCasinos()
        {
            varName = "null";
            varAddress = "null";
            varCity = "null";
            varState = "null";
            varCountry = "null";
            varContact = "null";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddCasinos Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable varName.
        /// </summary>
        [TestVariable("a55acb4a-b1cf-4336-b360-57c3c76643ff")]
        public string varName
        {
            get { return repo.varName; }
            set { repo.varName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varAddress.
        /// </summary>
        [TestVariable("56febe0f-d224-49db-87af-a0526cc022d4")]
        public string varAddress
        {
            get { return repo.varAddress; }
            set { repo.varAddress = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varCity.
        /// </summary>
        [TestVariable("4936bc91-4054-4802-aa05-f51eb7a49675")]
        public string varCity
        {
            get { return repo.varCity; }
            set { repo.varCity = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varState.
        /// </summary>
        [TestVariable("5464792d-6bc9-4d38-84d9-23863a722d87")]
        public string varState
        {
            get { return repo.varState; }
            set { repo.varState = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varCountry.
        /// </summary>
        [TestVariable("3c2160cb-8703-492d-9530-2035c683b4d7")]
        public string varCountry
        {
            get { return repo.varCountry; }
            set { repo.varCountry = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varContact.
        /// </summary>
        [TestVariable("d0d92aee-aca3-41e8-98e0-18abdc461b3b")]
        public string varContact
        {
            get { return repo.varContact; }
            set { repo.varContact = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Vertex.AristocratVertexWebUI.Form143077288.AddANewCasino' at 58;7.", repo.Vertex.AristocratVertexWebUI.Form143077288.AddANewCasinoInfo, new RecordItemIndex(0));
            repo.Vertex.AristocratVertexWebUI.Form143077288.AddANewCasino.Click("58;7");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Vertex.AristocratVertexWebUI.Form143077288.Casino.AddNewCasino.txtName' at 19;11.", repo.Vertex.AristocratVertexWebUI.Form143077288.Casino.AddNewCasino.txtNameInfo, new RecordItemIndex(1));
            repo.Vertex.AristocratVertexWebUI.Form143077288.Casino.AddNewCasino.txtName.Click("19;11");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varName' with focus on 'Vertex.AristocratVertexWebUI.Form143077288.Name'.", repo.Vertex.AristocratVertexWebUI.Form143077288.NameInfo, new RecordItemIndex(2));
            repo.Vertex.AristocratVertexWebUI.Form143077288.Name.PressKeys(varName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Vertex.AristocratVertexWebUI.Form143077288.Casino.AddNewCasino.txtStreetAddress' at 90;13.", repo.Vertex.AristocratVertexWebUI.Form143077288.Casino.AddNewCasino.txtStreetAddressInfo, new RecordItemIndex(3));
            repo.Vertex.AristocratVertexWebUI.Form143077288.Casino.AddNewCasino.txtStreetAddress.Click("90;13");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varAddress' with focus on 'Vertex.AristocratVertexWebUI.Form143077288.TextBox'.", repo.Vertex.AristocratVertexWebUI.Form143077288.TextBoxInfo, new RecordItemIndex(4));
            repo.Vertex.AristocratVertexWebUI.Form143077288.TextBox.PressKeys(varAddress);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Vertex.AristocratVertexWebUI.Form143077288.Casino.AddNewCasino.txtCity' at 92;13.", repo.Vertex.AristocratVertexWebUI.Form143077288.Casino.AddNewCasino.txtCityInfo, new RecordItemIndex(5));
            repo.Vertex.AristocratVertexWebUI.Form143077288.Casino.AddNewCasino.txtCity.Click("92;13");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varCity' with focus on 'Vertex.AristocratVertexWebUI.Form143077288.TextBox1'.", repo.Vertex.AristocratVertexWebUI.Form143077288.TextBox1Info, new RecordItemIndex(6));
            repo.Vertex.AristocratVertexWebUI.Form143077288.TextBox1.PressKeys(varCity);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Vertex.AristocratVertexWebUI.Form143077288.Casino.AddNewCasino.txtState_Province' at 33;12.", repo.Vertex.AristocratVertexWebUI.Form143077288.Casino.AddNewCasino.txtState_ProvinceInfo, new RecordItemIndex(7));
            repo.Vertex.AristocratVertexWebUI.Form143077288.Casino.AddNewCasino.txtState_Province.Click("33;12");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varState' with focus on 'Vertex.AristocratVertexWebUI.Form143077288.TextBox2'.", repo.Vertex.AristocratVertexWebUI.Form143077288.TextBox2Info, new RecordItemIndex(8));
            repo.Vertex.AristocratVertexWebUI.Form143077288.TextBox2.PressKeys(varState);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Vertex.AristocratVertexWebUI.Form143077288.Casino.AddNewCasino.txtCountry' at 48;10.", repo.Vertex.AristocratVertexWebUI.Form143077288.Casino.AddNewCasino.txtCountryInfo, new RecordItemIndex(9));
            repo.Vertex.AristocratVertexWebUI.Form143077288.Casino.AddNewCasino.txtCountry.Click("48;10");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varCountry' with focus on 'Vertex.AristocratVertexWebUI.Form143077288.TextBox3'.", repo.Vertex.AristocratVertexWebUI.Form143077288.TextBox3Info, new RecordItemIndex(10));
            repo.Vertex.AristocratVertexWebUI.Form143077288.TextBox3.PressKeys(varCountry);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Vertex.AristocratVertexWebUI.Form143077288.Casino.AddNewCasino.txtContact' at 46;16.", repo.Vertex.AristocratVertexWebUI.Form143077288.Casino.AddNewCasino.txtContactInfo, new RecordItemIndex(11));
            repo.Vertex.AristocratVertexWebUI.Form143077288.Casino.AddNewCasino.txtContact.Click("46;16");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varContact' with focus on 'Vertex.AristocratVertexWebUI.Form143077288.TextBox4'.", repo.Vertex.AristocratVertexWebUI.Form143077288.TextBox4Info, new RecordItemIndex(12));
            repo.Vertex.AristocratVertexWebUI.Form143077288.TextBox4.PressKeys(varContact);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Vertex.AristocratVertexWebUI.Form143077288.Save' at 12;8.", repo.Vertex.AristocratVertexWebUI.Form143077288.SaveInfo, new RecordItemIndex(13));
            repo.Vertex.AristocratVertexWebUI.Form143077288.Save.Click("12;8");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$varName) on item 'Vertex.AristocratVertexWebUI.Form143077288.Monitor.MonitorTabs.CasinoName_datadriven'.", repo.Vertex.AristocratVertexWebUI.Form143077288.Monitor.MonitorTabs.CasinoName_datadrivenInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.Vertex.AristocratVertexWebUI.Form143077288.Monitor.MonitorTabs.CasinoName_datadrivenInfo, "Text", varName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$varAddress) on item 'Vertex.AristocratVertexWebUI.Form143077288.Monitor.MonitorTabs.CasinoAddress_datadriven'.", repo.Vertex.AristocratVertexWebUI.Form143077288.Monitor.MonitorTabs.CasinoAddress_datadrivenInfo, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.Vertex.AristocratVertexWebUI.Form143077288.Monitor.MonitorTabs.CasinoAddress_datadrivenInfo, "Text", varAddress);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$varCity) on item 'Vertex.AristocratVertexWebUI.Form143077288.Monitor.MonitorTabs.CasinoCity_datadriven'.", repo.Vertex.AristocratVertexWebUI.Form143077288.Monitor.MonitorTabs.CasinoCity_datadrivenInfo, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.Vertex.AristocratVertexWebUI.Form143077288.Monitor.MonitorTabs.CasinoCity_datadrivenInfo, "Text", varCity);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$varState) on item 'Vertex.AristocratVertexWebUI.Form143077288.Monitor.MonitorTabs.CasinoState_datadriven'.", repo.Vertex.AristocratVertexWebUI.Form143077288.Monitor.MonitorTabs.CasinoState_datadrivenInfo, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.Vertex.AristocratVertexWebUI.Form143077288.Monitor.MonitorTabs.CasinoState_datadrivenInfo, "Text", varState);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$varCountry) on item 'Vertex.AristocratVertexWebUI.Form143077288.Monitor.MonitorTabs.CasinoCountry_datadriven'.", repo.Vertex.AristocratVertexWebUI.Form143077288.Monitor.MonitorTabs.CasinoCountry_datadrivenInfo, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.Vertex.AristocratVertexWebUI.Form143077288.Monitor.MonitorTabs.CasinoCountry_datadrivenInfo, "Text", varCountry);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$varContact) on item 'Vertex.AristocratVertexWebUI.Form143077288.Monitor.MonitorTabs.CasinoContact_datadriven'.", repo.Vertex.AristocratVertexWebUI.Form143077288.Monitor.MonitorTabs.CasinoContact_datadrivenInfo, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.Vertex.AristocratVertexWebUI.Form143077288.Monitor.MonitorTabs.CasinoContact_datadrivenInfo, "Text", varContact);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
